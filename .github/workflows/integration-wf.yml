name: Integration Test Suite WorkFlow

on: 
  push:
    branches:
      - integration_test
  pull_request:
    branches:
      - master
jobs:
  integration-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the current repo
        uses: actions/checkout@v1
      - name: Install Tool
        run: |
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.8.1/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/bin/
      - name: Run Kind Cluster
        run: |
          cd integration/
          ./registry.sh
          helm repo add kedacore https://kedacore.github.io/charts
          helm repo update
          kubectl create namespace keda
          helm install keda kedacore/keda --namespace keda
      - name: Create Docker Image for HTTP server
        run: |
          cd integration/server/
          docker build -t localhost:5000/http-server:latest .
          docker push localhost:5000/http-server:latest
      - name: Create Docker Image for KEDA Connector
        run: |
          cd kafka-http-connector/
          docker build -t localhost:5000/kafka-connector:latest .
          docker push localhost:5000/kafka-connector:latest
      - name: Create Docker Image for Consumer
        run: |
          cd integration/kafka/consumer/
          docker build -t localhost:5000/consumer:latest .
          docker push localhost:5000/consumer:latest
      - name: Deploy Kafka cluster
        run: |
          cd integration/kafka/kubernetes/
          kubectl create namespace kafka
          curl -L http://strimzi.io/install/latest | sed 's/namespace: .*/namespace: kafka/' | kubectl apply -f - -n kafka
          sleep 10s
          kubectl apply -f kafka-cluster.yaml
          echo "Kafka Cluster is getting up, will take some time to spin the components..."
          kubectl wait -f kafka-cluster.yaml --for=condition=ready --timeout=-1s -n kafka
          sleep 2m
          kubectl wait pod -l app.kubernetes.io/name=zookeeper --for=condition=ready --timeout=-1s -n kafka
      - name: Create Kafka topics
        run: |
          cd integration/kafka/kubernetes/
          kubectl apply -f kafka-req-topic.yaml 
          kubectl apply -f kafka-err-topic.yaml
          kubectl apply -f kafka-res-topic.yaml
      - name: Bring up HTTP Server
        run: |
          cd integration/server/
          kubectl apply -f server.yaml
          kubectl wait pod -l app=http --for=condition=ready --timeout=-1s -n kafka
      - name: Deploy Keda Connector and Keda ScaledObject
        run: |
          cd integration/kafka/kubernetes/
          kubectl apply -f keda-deployment.yml
          kubectl wait pod -l keda=kafka --for=condition=ready --timeout=-1s -n kafka
          kubectl apply -f Keda-ScaledObj.yml 
      - name: Produce messages Using Producer
        run: |
          cd integration/kafka/kubernetes/
          kubectl apply -f kafka-produer.yaml -n kafka
          kubectl wait -f kafka-produer.yaml --for=condition=complete --timeout=-1s -n kafka
      - name: Collect Consumer Messages
        run: |
          cd integration/kafka/consumer/
          kubectl apply -f consumer-deployment.yaml
          kubectl wait pod -l app=consumer --for=condition=ready --timeout=-1s -n kafka
          kubectl logs -l app=consumer --all-containers=true -n kafka
      - name: Delete Kind Cluster
        run: |
          kind delete clusters kind-kind-registry-svc
